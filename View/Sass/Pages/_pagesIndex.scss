
/* DEBUT    de la section intitulée ''Fonctionnement''*/

.decalage{ /* ATTENTION ce style est utilisé de manière global. à voir s'il faut déplacer dans un autre scss*/
    padding: 0 0 0 $decalage; /*top right bottom left*/
}

.paddingTopBottom{ /*Attention est utilisé dans plusieurs div!!!!*/
    padding-top: 55px;
    padding-bottom: 55px;
}
.margeTitel1{
    margin-bottom: 50px;
}

.bttFonctionnement{
    display: flex; /* flex-direction column est appliqué de base*/
    position: relative;
    z-index: 1;

    background-color: rgb(244, 244, 244);

    width: 95%;
    height: 65px;
    border-radius: 20px;

    margin-bottom: 25px;
    margin-left: 12px;

    /* offset-x | offset-y | blur-radius | spread-radius | color */
    box-shadow: 2px 2px 10px 1px rgba(0, 0, 0, 0.2);

    &:hover{
        cursor: pointer;
        &::after{
            opacity: 1;
        }
        & > .bttFonctionnement__Logo--hide{
            display: flex;
        }
        & > .bttFonctionnement__Logo--nothidden{
            display: none;
        }
    }

    &::after{
        opacity: 0;
        z-index: -1;
        background-color: lighten($primaire, 35%);
        -webkit-transition: opacity 250ms;
        transition: opacity 250ms;

        position: absolute;
        content: "";
        top: 0; right: 0; bottom: 0; left: 0;

        border-radius: 20px;
    }

    &__Number{
        margin: auto 0 auto 0 ; /*top right bottom left*/
        padding: 3px 0 0 0;
        text-align: center;
        vertical-align: middle;
        color: white;

        position: relative;
        left: -12px;

        background-color: $primaire;
        border-radius: 50%;
        width: 25px;
        height: 25px;
    }
    &__Logo{
        margin: auto 10% auto 10% ; /*top right bottom left*/
        color: grey;
        &--hide{
            display: none;
            color: $primaire;
        }
    }
    &__Text{
        position: absolute;
        left: 35%; top: 20px;

        font-size: 18px;
        font-weight: 500;
    }
}

/* FIN      de la section intitulée ''Fonctionnement''*/



/* DEBUT    de la section intitulée ''RESTAURANTS''*/

.stopLinkStyle{
    text-decoration: none;
    color: black;
}

.styleContainerRestaurant{
    background-color: rgb(244, 244, 244);
    display: flex;
    flex-direction: column;
}

.articleRestaurant{
    display: flex; /* Pas sur que ce soit nécessaire, mais utile si je souhaite utiliser des marges auto */
    flex-direction: column;
    position: relative; /* Va me permettre de positionner le text ''nouveau'' de manière
    absolu, par rapport à cette balise*/

    width: 90vw;
    border-radius: 25px;

    background-color: white;
    /* offset-x | offset-y | blur-radius | spread-radius | color */
    box-shadow: 2px 2px 10px 1px rgba(0, 0, 0, 0.2);

    margin-bottom: 25px;

    &__p{
        background-color: rgb(138, 221, 197);
        color: rgb(0, 120, 84);
        position: absolute;
        right: 15px; top: 3px; /* AMELIORATION a exprimer en % à l'aide d'une fonction calc()*/

        width: 85px;
        height: 29px;
        border-radius: 3px;

        text-align: center;
        padding-top: 5px; /* me permet de centrer le text verticalement... Pas
        très élegent, mais puisque non responsive, je peux me le permettre.*/
        &--hide{
            display: none;
        }
    }
    &__img{
        object-fit: cover;
        width: 90vw;
        height: 250px;
        border-top-left-radius: 25px; border-top-right-radius: 25px;
    }
}

.articleRestaurantContainer{
    display: flex;
    flex-direction: row;
    position: relative;

    &__FirstDiv{
        padding-left: 2vw;
    }
    &__SecondDiv{
        margin: auto 0 auto auto; /*top right bottom left*/
        padding-right: 4vw;

    }
}
/*
background: $primaire;
background: linear-gradient(-10deg, $primaire, $secondaire); */

/* DEBUT : Animation du coeur */

@mixin positionHeartAnimation {
    position: absolute;
    right: 0px; top: 0px;
}

.HeartContainerAnimated{
    position: relative;
    margin: auto 5vw auto auto; /*top right bottom left*/
    /* à noter que le margin me permet de toujours placer le coeur à 5vw du bord droit et center. */
    padding: 10px;

    height: 100%;
    width: 34px;

    &:hover{
        & > .HeartContainerAnimated__secondLayer{
            transform: scaleY(0.01);
        }
    }

    &__firstLayer{
        @include positionHeartAnimation;

        background: linear-gradient(-10deg, $primaire, $secondaire);
        -webkit-background-clip: text;
        color: transparent;

        z-index: 1;
    }
    &__secondLayer{
        @include positionHeartAnimation;

        height: 30px; width: 34px; /* Ici nous avons une div avec les dimensions d'un coeur */
        /*C'est le height qui doit diminuer pendant l'animation*/

        background-color: white;
        &--colorBeige{
            /*à rajouter pour les menus, car le fond est d'une autre couleur*/
            background-color: rgb(244, 244, 244);;
        }

        transform-origin: top center;
        transform: scaleY(1);
        transition: transform 300ms;

        z-index: 2;     /* Je souhaite que le rectangle cache le coeur plein. Il doit donc se trouver entre le contour du coeur et le coeur plein*/
    }
    &__thirdLayer{
        @include positionHeartAnimation;

        z-index: 3;     /* Je souhaite que le contour du coeur soit toujours noir et toujours visible, donc tout en haut*/
    }
}

/* FIN :      Animation du coeur*/


/* FIN      de la section intitulée ''RESTAURANTS''*/